<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="uber_sql.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1377"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="uber_data" custom_title="0" dock_id="1" table="4,9:mainuber_data"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000011e00ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1*">
-- 1. Display the structure and column details of the 'uber' table
PRAGMA table_info(uber);

-- 2. Count the total number of rows and columns in the 'uber' table
SELECT 
    (SELECT COUNT(*) FROM uber) AS total_rows,
    (SELECT COUNT(*) 
     FROM pragma_table_info('uber')) AS total_columns;

-- 3. Get the total number of ride requests from the 'uber_data' table
SELECT COUNT(*) AS total_requests
FROM uber_data;

-- 4. Display the structure and column details of the 'uber_data' table
PRAGMA table_info(uber_data);

-- 5. Get the number of ride requests by status (e.g., Trip Completed, Cancelled, No Cars Available)
SELECT status, COUNT(*) AS count
FROM uber_data
GROUP BY status;

-- 6. Get the total number of ride requests from each pickup location (City vs Airport)
SELECT &quot;Pickup point&quot;, COUNT(*) AS total
FROM uber_data
GROUP BY &quot;Pickup point&quot;;

-- 7. Get the number of ride requests from each pickup point broken down by ride status
SELECT &quot;Pickup point&quot;, status, COUNT(*) AS total
FROM uber_data
GROUP BY &quot;Pickup point&quot;, status
ORDER BY &quot;Pickup point&quot;;

-- 8. List the top 10 drivers who completed the most trips
SELECT 
    &quot;Driver_id&quot; AS &quot;Driver ID&quot;,
    COUNT(*) AS &quot;Number of Completed Trips&quot;
FROM 
    uber_data
WHERE 
    &quot;Status&quot; = 'Trip Completed'
    AND &quot;Driver id&quot; IS NOT NULL
GROUP BY 
    &quot;Driver id&quot;
ORDER BY 
    COUNT(*) DESC
LIMIT 10;

-- 9. List the top 10 drivers with the highest number of cancellations
SELECT 
    &quot;Driver id&quot; AS &quot;Driver_ID&quot;,
    COUNT(*) AS &quot;Number_of_Cancellations&quot;
FROM 
    uber_data
WHERE 
    &quot;Status&quot; = 'Cancelled'
    AND &quot;Driver id&quot; IS NOT NULL
GROUP BY 
    &quot;Driver id&quot;
ORDER BY 
    COUNT(*) DESC
LIMIT 10;








</sql><current_tab id="0"/></tab_sql></sqlb_project>
